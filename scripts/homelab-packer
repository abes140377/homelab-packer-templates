#!/usr/bin/env bash

set -euo pipefail

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Default var files to use
VAR_FILES=(
    "my.pkrvars.hcl"
    "ubuntu-24.04.pkrvars.hcl"
)

# Initialize Packer
init_packer() {
    echo "Initializing Packer..."
    packer init config.pkr.hcl
}

# Validate Packer configuration
validate_config() {
    echo "Validating Packer configuration..."

    local var_file_args=()
    for var_file in "${VAR_FILES[@]}"; do
        var_file_args+=("-var-file=${var_file}")
    done

    packer validate "${var_file_args[@]}" .
    echo "✓ Validation successful"
}

# Build Packer template
build_template() {
    echo "Building Packer template..."

    local var_file_args=()
    for var_file in "${VAR_FILES[@]}"; do
        var_file_args+=("-var-file=${var_file}")
    done

    packer build "${var_file_args[@]}" .
    echo "✓ Build complete"
}

# Show usage information
usage() {
    cat << EOF
Usage: $(basename "$0") COMMAND

Commands:
    validate    Validate Packer configuration only
    build       Validate and build Packer template

Examples:
    $(basename "$0") validate
    $(basename "$0") build
EOF
}

# Main execution
main() {
    # Navigate to the directory containing the Packer templates
    cd "${SCRIPT_DIR}/.." || exit 1

    # Initialize Packer first
    init_packer

    # Check if argument is provided
    if [[ $# -eq 0 ]]; then
        echo "Error: Command argument is required" >&2
        echo "" >&2
        usage
        exit 1
    fi

    case "${1}" in
        validate)
            validate_config
            ;;
        build)
            validate_config
            build_template
            ;;
        -h|--help|help)
            usage
            exit 0
            ;;
        *)
            echo "Error: Unknown command '${1}'" >&2
            echo "" >&2
            usage
            exit 1
            ;;
    esac
}

# Run main function if script is executed directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
