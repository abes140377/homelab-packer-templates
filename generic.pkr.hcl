//  BLOCK: data
//  Defines the data sources.

data "git-repository" "cwd" {}

//  BLOCK: locals
//  Defines the local variables.

locals {
  build_by          = "Built by: HashiCorp Packer ${packer.version}"
  build_date        = formatdate("DD-MM-YYYY hh:mm ZZZ", "${timestamp()}" )
  build_version     = data.git-repository.cwd.head
  build_description = "Version: ${local.build_version}\nBuilt on: ${local.build_date}\n${local.build_by}\nCloud-Init: ${var.cloud_init}"
  manifest_date     = formatdate("YYYY-MM-DD hh:mm:ss", timestamp())
  manifest_path     = "${path.cwd}/manifests/"
  manifest_output   = "${local.manifest_path}${local.manifest_date}.json"
  data_source_content = {
    "/meta-data" = file("${abspath(path.root)}/http/ubuntu/meta-data")
    "/user-data" = templatefile("${abspath(path.root)}/http/ubuntu/user-data.pkrtpl.hcl", {
      build_username           = var.ssh_username
      # build_password           = var.ssh_password
      build_password_encrypted = var.ssh_password_encrypted
      vm_os_language           = var.vm_os_language
      vm_os_keyboard           = var.vm_os_keyboard
      vm_os_timezone           = var.vm_os_timezone
    })
  }
}

//  BLOCK: source
//  Defines the builder configuration blocks.
//
source "proxmox-iso" "vm" {
  // Proxmox Connection Settings and Credentials
  proxmox_url              = "https://${var.proxmox_host}/api2/json"
  username                 = var.proxmox_user
  token                    = var.proxmox_token
  insecure_skip_tls_verify = var.proxmox_insecure_tls

  // Proxmox Settings
  node                 = var.node

  // Virtual Machine Settings
  vm_id                = var.vmid
  vm_name              = var.name
  pool                 = var.pool

  cpu_type = var.cpu_type
  sockets  = var.cpu_sockets
  cores    = var.cpu_cores
  memory   = var.memory

  disks {
    storage_pool      = var.disk_storage_pool
    disk_size         = var.disk_size
    format            = var.disk_format
    type              = var.disk_type
    cache_mode        = var.disk_cache
  }

  network_adapters {
    bridge      = var.network_adapter
    model       = var.network_adapter_model
    mac_address = var.network_adapter_mac
    vlan_tag    = var.network_adapter_vlan == -1 ? "" : "${var.network_adapter_vlan}"
    firewall    = var.network_adapter_firewall
  }

  vga {
    type   = var.vga_type
    memory = var.vga_memory
  }

  os              = var.os
  scsi_controller = var.scsi_controller
  onboot          = var.start_at_boot
  qemu_agent      = var.qemu_agent
  bios            = var.bios

  ssh_username   = var.ssh_username
  ssh_password   = var.ssh_password
  ssh_timeout    = var.ssh_timeout

  // Removable Media Settings
  http_content = local.data_source_content

  // Boot and Provisioning Settings
  boot           = "order=${var.disk_type}0;ide2;net0"
  boot_command   = var.boot_command
  boot_wait      = var.boot_wait

  boot_iso {
    iso_file         = var.iso_download ? "" : "${var.iso_storage_pool}:iso/${var.iso_file}"
    iso_storage_pool = var.iso_storage_pool
    iso_url          = var.iso_download ? var.iso_url : ""
    iso_checksum     = var.iso_checksum
    iso_download_pve = var.iso_download_pve
    unmount          = var.iso_unmount
  }

  template_name        = var.name
  template_description = var.description == "" ? "${var.name}, generated by packer at ${formatdate("YYYY-MM-DD hh:mm:ss", timestamp())}" : var.description

  # VM Cloud Init Settings
  cloud_init              = var.cloud_init
  cloud_init_storage_pool = var.cloud_init == true ? var.cloud_init_storage_pool : null
}

build {
  sources = ["source.proxmox-iso.vm"]

  provisioner "shell" {
    execute_command = "echo 'packer' | {{ .Vars }} sudo -S -E sh -eux '{{ .Path }}'"
    inline          = var.provisioner
    skip_clean      = true
  }

  post-processor "manifest" {
    output     = local.manifest_output
    strip_path = true
    strip_time = true
    custom_data = {
      # ansible_username         = "${var.ansible_username}"
      build_username           = "${var.ssh_username}"
      build_date               = "${local.build_date}"
      build_version            = "${local.build_version}"
      # common_data_source       = "${var.common_data_source}"
      # vm_cpu_sockets           = "${var.vm_cpu_sockets}"
      # vm_cpu_count             = "${var.vm_cpu_count}"
      # vm_disk_size             = "${var.vm_disk_size}"
      # vm_bios                  = "${var.vm_bios}"
      # vm_os_type               = "${var.vm_os_type}"
      # vm_mem_size              = "${var.vm_mem_size}"
      # vm_network_card_model    = "${var.vm_network_card_model}"
      cloud_init               = "${var.cloud_init}"
    }
  }
}
